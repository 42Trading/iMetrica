/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'clisztian' at '8/23/16 1:56 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
        destinationDir file("$buildDir/libs")
        baseName 'native-libs'
        extension 'jar'
        from fileTree(dir: 'libs', include: '*.so')
        into 'lib/'
}

tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

tasks.withType(Test) {
    systemProperty "java.library.path", "libs"
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-api:1.7.21'
    runtime 'ch.qos.logback:logback-classic:1.1.3' // slf4j implementation
	compile 'org.apache.commons:commons-math:2.2'
	compile 'org.apache.commons:commons-math3:3.2'
	compile 'net.sourceforge.collections:collections-generic:4.01'
	compile 'org.apache.logging.log4j:log4j-api:2.2'
	compile 'org.apache.logging.log4j:log4j-core:2.2'
	compile 'net.sourceforge.javacsv:javacsv:2.0'
	compile 'joda-time:joda-time:2.3'
	compile files ('jars/IB.jar')
	compile files ('jars/tinylaf.jar')
	compile files ('jars/RCaller-2.0.7.jar')
	compile files ('jars/simpleslackapi.jar')
	compile files ('jars/simpleslackapi-0.6.0-SNAPSHOT.jar')
	compile files ('jars/lombok.jar')
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

apply plugin:'application'
mainClassName = "ch.imetrica.usimx13.IMetricaProgram"
run { 
   systemProperty "java.library.path", 'libs'
}    

